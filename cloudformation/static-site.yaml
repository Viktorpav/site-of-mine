AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a static site

Parameters:
    DomainName:
        Description: Domain name
        Type: String
    CertificateManagerArn:
        Description: Certificate locater
        Type: String

Resources:
    S3Bucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Delete
        Properties:
            BucketName: !Sub "${DomainName}"
            BucketEncryption:
                ServerSideEncryptionConfiguration: 
                - ServerSideEncryptionByDefault: 
                    SSEAlgorithm: AES256
            PublicAccessBlockConfiguration: 
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true
            WebsiteConfiguration:
                IndexDocument: index.html
                ErrorDocument: 404.html
            VersioningConfiguration:
                Status: Suspended

    S3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref S3Bucket
            PolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Sid: "Grant CloudFront Origin Access Identity access to S3 bucket"
                      Effect: "Allow"
                      Action: "s3:GetObject"
                      Resource: !Join ['', ['arn:aws:s3:::', !Ref S3Bucket]]
                      Principal:
                        CanonicalUser: !GetAtt CloudFrontDistribution.S3CanonicalUserId

    CloudFrontOriginAccessControl:
        Type: AWS::CloudFront::OriginAccessControl
        Properties: 
            OriginAccessControlConfig:
                Description: Default Origin Access Control
                Name: !Ref DomainName
                SigningBehavior: always
                SigningProtocol: sigv4
                OriginAccessControlOriginType: s3

    CloudFrontDistribution:
        Type: AWS::CloudFront::Distribution
        Properties:
            DistributionConfig:
                Aliases:
                    - !Ref DomainName
                    - !Sub "www.${DomainName}"
                # CustomErrorResponses:
                #     - ErrorCachingMinTTL: 60
                #       ErrorCode: 404
                #       ResponseCode: 404
                #       ResponsePagePath: "/404.html"
                DefaultCacheBehavior:
                    AllowedMethods:
                        - GET
                        - HEAD
                    CachedMethods:
                        - GET
                        - HEAD
                    Compress: true
                    DefaultTTL: 3600
                    ForwardedValues:
                        Cookies:
                            Forward: none
                        QueryString: true
                    MaxTTL: 31536000
                    MinTTL: 0
                    SmoothStreaming: false
                    TargetOriginId: !Sub "${DomainName}"
                    ViewerProtocolPolicy: "redirect-to-https"
                    FunctionAssociations:
                        - EventType: viewer-request
                          FunctionARN: !GetAtt RedirectFunction.FunctionMetadata.FunctionARN
                DefaultRootObject: "index.html"
                Enabled: true
                HttpVersion: http2
                IPV6Enabled: true
                Origins:
                    # - CustomOriginConfig:
                    #       HTTPPort: 80
                    #       HTTPSPort: 443
                    #       OriginKeepaliveTimeout: 5
                    #       # keep http-only to avoid 504 errors after stack creation
                    #       OriginProtocolPolicy: "http-only"
                    #       OriginReadTimeout: 30
                    #       OriginSSLProtocols: TLSv1.2
                      #Bucket website endpoint without http://
                      #!!! for buckets created in US East (N. Virginia) region without <<Regional>> "S3Bucket.DomainName"
                    - DomainName: !GetAtt S3Bucket.RegionalDomainName
                      Id: !Sub "${DomainName}"
                      S3OriginConfig:
                        OriginAccessIdentity: ''
                      OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id

                # there are PriceClass_ALL or PriceClass_200/_100
                PriceClass: PriceClass_100
                ViewerCertificate:
                    AcmCertificateArn: !Ref CertificateManagerArn
                    MinimumProtocolVersion: TLSv1.2_2021
                    SslSupportMethod: sni-only

    RedirectFunction:
        Type: AWS::CloudFront::Function
        Properties:
            AutoPublish: true
            Name: !Sub "${AWS::StackName}-redirects"
            # add the config, even if optional, the stack creation will thrown InternalFailure error otherwise
            FunctionConfig:
                Comment: !Sub "Redirect to www.${DomainName}"
                Runtime: cloudfront-js-1.0
            FunctionCode: !Sub |
                function handler(event) {
                    var request = event.request;
                    var host = request.headers.host.value;

                    if (!host.startsWith("www.")) {
                        return {
                            statusCode: 301,
                            statusDescription: "Permanently moved",
                            headers: {
                                location: { value: "https://www." + host },
                            },
                        };
                    }
                    return request;
                }

    Route53RecordSetGroup:
        Type: AWS::Route53::RecordSetGroup
        Properties:
            # keep the . suffix
            HostedZoneName: !Sub "${DomainName}."
            RecordSets:
                - Name: !Ref DomainName
                  Type: A
                  AliasTarget:
                      DNSName: !GetAtt CloudFrontDistribution.DomainName
                      EvaluateTargetHealth: false
                      HostedZoneId: Z2FDTNDATAQYW2 # leave hardcoded, don't confuse w/ !Ref HostedZoneId
                - Name: !Sub "www.${DomainName}"
                  Type: A
                  AliasTarget:
                      DNSName: !GetAtt CloudFrontDistribution.DomainName
                      EvaluateTargetHealth: false
                      HostedZoneId: Z2FDTNDATAQYW2 # leave hardcoded, don't confuse w/ !Ref HostedZoneId

Outputs:
    WebsiteURL:
        Value: !GetAtt S3Bucket.WebsiteURL
        Description: URL for website hosted on S3
    CloudfrontDomainName:
        Value: !GetAtt CloudFrontDistribution.DomainName
