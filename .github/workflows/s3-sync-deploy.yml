name: S3 Syncing Workflow
on:
  # push:
  #   branches:
  #   # Here we choose to deploy only when a push is detected on the main branch
  #     - main
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
  # To build the project, take a VM with latest Ubuntu OS for running the next steps
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@master

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Set ENV var for DistributionId
    - name: Set tag var
      id: vars
      run: echo "DistributionId=$(aws cloudfront list-distributions --query "DistributionList.Items[*].{id:Id,origin:Origins.Items[0].Id}[?origin=='pavlyshyn.space'].id" --output text)" >> $GITHUB_ENV

    # Upload folder with the name "video":
    - name: Upload videos folder as artifact
      uses: actions/upload-artifact@v2
      with:
        name: video
        path: ./video
    
    # Downloads an artifact from the current repository or another repository and extracts it to a directory
    - name: Download videos artifact
      uses: actions/download-artifact@v2
      with:
        name: video
        path: ./video

    - name: Deploy content to S3 bucket
      run: |
        aws s3 sync ./video s3://pavlyshyn.space --exclude "*" --include index.html --include 404.html --include 503.html --recursive
        aws cloudfront create-invalidation --distribution-id $DistributionId --paths '/*'